spring.config.import=optional:file:.env[.properties]
spring.application.name=JavaWebDemo

# Database
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.hikari.username=${DATASOURCE_USERNAME}
spring.datasource.hikari.password=${DATASOURCE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

# GitHub OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri=http://Java-oauth-app-env.eba-ctm3vabw.eu-north-1.elasticbeanstalk.com/login/oauth2/code/github
spring.security.oauth2.client.registration.github.scope[0]=user:email
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://Java-oauth-app-env.eba-ctm3vabw.eu-north-1.elasticbeanstalk.com/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Google provider endpoints
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# General server settings
server.servlet.context-path=/
server.port=8080
